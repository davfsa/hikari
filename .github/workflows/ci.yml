name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  run-guard:
    # To prevent CI from running twice for branches in the main repo, we have this check that allows any
    # trigger by push but only allows triggers by pull request if the repository of the branch is not the base repo
    if: github.event.push || (github.event.pull_request && github.event.pull_request.head.repo.full_name != github.repository)

    runs-on: ubuntu-20.04

    steps:
      - name: Allow CI to run
        run: exit 0

  test:
    need: [run-guard]

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        python-version: [3.8, 3.9, 3.10-dev]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Setup python
        if: matrix.python-version
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test Installation
        run: |
          pip install wheel

          pip install .
          pip uninstall -y hikari

          pip install .[speedups]
          pip uninstall -y hikari

      - name: Run tests
        run: |
          pip install nox
          nox -s pytest
          nox -s pytest-speedups -- --cov-append

          mv .coverage .coverage.${{ matrix.os }}.${{ matrix.python-version }}

      - name: Upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: .coverage.${{ matrix.os }}.${{ matrix.python-version }}
          retention-days: 1
          if-no-files-found: error


  upload-coverage:
    needs: [test]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Download coverage
        uses: actions/download-artifact@v2
        with:
          name: coverage

      - name: Combine coverage
        run: |
          pip install coverage
          coverage combine
          coverage xml -i

      - name: Upload to codeclimate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter after-build --id "d40e64ea0ff74713f79365fea4378ab51a2141ad4fcf0fb118496bbf560d4192"

  linting:
    need: [run-guard]

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Check stubs
        run: |
          pip install nox
          nox -s generate-stubs
          if [ "$(git status --short)" ]; then
            echo "Stubs were not updated accordingly to the changes. Please run 'nox -s generate-stubs' and commit the changes to fix this."
            exit 1
          fi

      - name: Linting
        run: |
          nox -s safety mypy flake8 codespell

  twemoji:
    need: [run-guard]

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Test twemoji mapping
        run: |
          pip install nox
          nox -s twemoji-test

  # Allows us to add this as a required check in Github branch rules, as all the other jobs are subject to change
  ci-done:
    # All new need jobs need to also be added to "env" with the prefix "RESULT_"
    needs: [upload-coverage, linting, twemoji]
    if: always()

    runs-on: ubuntu-20.04

    steps:
      - name: Mark status based on past job status
        env:
          RESULT_UPLOAD_COVERAGE: ${{ needs.upload-coverage.result }}
          RESULT_LINTING: ${{ needs.linting.result }}
          RESULT_TWEMOJI: ${{ needs.twemoji.result }}
        run: |
          if [ "$(env | grep 'RESULT_')" = "$(env | grep "RESULT_" | grep '=success')" ]; then
            exit 0
          else
            exit 1
          fi

  deploy-master-docs:
    if: github.event.push && endsWith(github.ref, 'master') && github.repository == 'hikari-py/hikari'
    needs: [ci-done]

    runs-on: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      VERSION: master

    steps:
      - name: Update master docs
        run:
          - bash scripts/deploy-pages.sh

  deploy-release:
    if: github.event_name == 'release' && github.repository == 'hikari-py/hikari'
    needs: [ci-done]

    runs-on: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      GITHUB_TAG: ${{ github.event.release.tag_name }}
      GITHUB_REPO_SLUG: ${{ github.repository }}
      DEPLOY_WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL }}
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Deploy
        run: bash scripts/deploy.sh
